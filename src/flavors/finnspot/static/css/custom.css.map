{"version":3,"sources":["src/flavors/finnspot/static/css/custom.styl","src/flavors/finnspot/static/css/custom.css","node_modules/nib/lib/nib/border.styl","node_modules/axis/axis/utilities.styl","node_modules/nib/lib/nib/overflow.styl","node_modules/rupture/rupture/index.styl"],"names":[],"mappings":"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","file":"src/flavors/finnspot/static/css/custom.css","sourcesContent":["@import 'typographic'\n// @import 'nib'\n@import 'nib/border'\n@import 'nib/clearfix'\n@import 'nib/gradients'\n@import 'nib/image'\n@import 'nib/overflow'\n@import 'nib/positions'\n@import 'nib/reset'\n@import 'nib/size'\n@import 'axis'\n@import 'rupture'\n\t\t\nbody, select, input, textarea\n\tcolor #555\n\tfont-family \"Proxima Nova\", Arial, Helvetica, serif\n\t\n.btn,\n.btn:visited,\n.btn:link\n\tfont-weight 600\n\tborder 0\n\t\n.btn-primary,\n.btn-primary:visited,\n.btn-primary:link\n\tbackground-color #FF00FF\n\tbox-shadow 2px 2px 10px rgba(0, 0, 0, 0.5)\n\tcolor #fff\n\ttransition all 0.5s ease\n\n.btn-primary\n\t&:hover\n\t\tbox-shadow 0px 0px 1px rgba(0, 0, 0, 0.2)\n\t\tbackground-color #FC13FF\n\n.btn-secondary,\n.btn-secondary:visited,\n.btn-secondary:link\n\tbackground-color rgb(255, 0, 98)\n\tcolor white\n\na, a:active, a:visited\n\tcolor #0092D7\n\n.recent-points\n\ta\n\t\tcolor #585A59\n\t\ttext-decoration none\n\t\tfloat left\n\t\tborder-top 1px solid #888\n\t\tborder-bottom 1px solid #666\n\t\tpadding 0.5em 0.5em 0.5em 0.75em\n\t\twidth 100%\n\t\t-webkit-box-sizing border-box\n\t\t-moz-box-sizing border-box\n\t\tbox-sizing border-box\n\n#site-header\n\tborder-top #FF00FF 3px solid\n\tbackground-color #ffffff\n\tbackground-image linear-gradient(90deg, #FFFFFF 20%, #2AAF32 30%, #D9C51A 40%, #DB32B0 50%, #FFFFFF 71%)\n\tbox-shadow 0 5px 10px rgba(85, 85, 85, 0.5), inset 0 -3px 0\n\n.access li:hover > ul,\n  .access li:hover > form > ul\n\tdisplay block\n\tbackground #ccc\n\tbox-shadow none\n\tborder 0px solid rgba(0,0,0,0.05)\n\tborder-radius 0\n\tmargin -3px -60px 0 0\n\tpadding 3px 0 0 0\n\tposition absolute\n\ttop 100%\n\tleft 0\n\tz-index 2\n\toverflow hidden\n\n#site-title\n\tbackground url('images/finnspotlogo.svg') no-repeat center\n\tbackground-size contain\n\twidth 440px\n\ttext-indent -133337px\n\n.site-name\n\tfont-size 0.45em\n\tfloat left\n\tline-height 1.1\n\tbackground-color #26A0DA\n\tposition relative\n\ttop -0.6em\n\n.has-pages\n\t#site-title\n\t\tmargin-left -0.75em\n\n.access\n\tfont-size 1.1em\n\n#pages-nav-container, #language-picker\n\theight 100%\n\tfloat left\n\tmargin-right -163px\n\tmargin-left 35px\n\n#nav-btn\n\tbackground #6f6f6f\n\tcolor #bbb\n\tfont-size 2em\n\tline-height 0.7\n\ttext-decoration none\n\ttext-align center\n\ttext-shadow -1px 1px 1px rgba(0,0,0,0.25)\n\tfloat left\n\twidth .8em\n\tpadding 0.125em 0\n\tposition absolute\n\tborder-radius 2.5px\n\tleft 0.25em\n\ttop 0.25em\n\n#colophon\n\tbox-shadow inset 0 5px 10px rgba(85, 85, 85, 0.25)\n\n#ticker\n\tbackground #ffffff\n\tbox-shadow -5px 0 10px rgba(85, 85, 85, 0.5)\n\n#content\n\tbackground #fff\n\t\n\t+above('m')\n\t\tbackground pink\n\na\n\t&.close-btn\n\t\tbackground #fff\n\t\t\n\t\t+above('m')\n\t\t\tbackground pink\n\t&.leaflet-control-layers-toggle\n\t\t// background-image url(images/bikelanes.png)\n\t\tbackground none\n\t\tbackground-size inherit\n\t\twidth 118px\n\t\theight 28px\n\n#list-container\n\tbackground #eee\n\n.list-toggle-btn,\n  .list-toggle-btn:visited,\n  .list-toggle-btn:link\n\tbackground-color #FF00FF\n\n.list-toggle-btn\n\t&:hover\n\t\tbackground-color #575958\n\t\tcolor #fff\n\n.drag-marker-instructions,\n.drag-marker-warning\n\tbackground-color #E600C0\n\tcolor #fff\n\ttext-shadow none\n\n.drag-marker-instructions\n\timg\n\t\t// display none\n\t\t\n\t\t&:before\n\t\t\tcontent \"Hi\"\n\n.drag-marker-warning\n\tbackground-color #FC00F0\n\tcolor #fff\n\ttext-shadow none\n\n#centerpoint\n\t&.newpin\n\t\t.marker\n\t\t\tdisplay block\n\t\t\twidth 27px\n\t\t\theight 41px\n\t\t\tbackground transparent url(images/newspot.svg) 0 0 no-repeat scroll\n\t\t\tposition relative\n\t\t\ttop 3px\n\t\t\ttransition top 0.4s ease\n\t\t.x\n\t\t\tbackground  transparent url(images/x.svg) 0 0 no-repeat scroll;\n\t\t\twidth 20px\n\t\t\theight 15px\n\t\t.shadow\n\t\t\tbackground  transparent url(images/master-pin-shadow.svg) -29px 2px no-repeat scroll;\n\t\t\twidth 100px\n\t\t\n\t\t&.dragging\n\t\t\t.shadow\n\t\t\t\tbackground  transparent url(images/master-pin-shadow.svg) -20px -2px no-repeat scroll;\n\n.spot-type-title\n\ttext-align center\n\tpadding 1em\n\tcolor #000000\n\tbackground-color #DBDBDB\n\tborder-bottom 2px solid #8C8C8C\n\tmargin-bottom 1em\n\n.legend\n\tborder-top 0\n\tpadding-bottom 1em\n\tli\n\t\tline-height 26px\n\timg\n\t\tmax-height 33px\n\t\tvertical-align middle\n\n.place-value-age\n\tdisplay none\n\n.place-value-gender\n\tdisplay none\n\n.place-value-location_updates\n\tdisplay none\n\n.place-value-safety_rating\n\t&:before\n\t\tcontent \"Safety rating: \"\n\t\tfont-weight bold\n\n.place-value-description\n\t&:before\n\t\tcontent \"Description: \"\n\t\tfont-weight bold\n\n.place-value-rider_type\n\t&:before\n\t\tcontent \"Rider type: \"\n\t\tfont-weight bold\n\n#place-safety_rating\n\tdisplay none\n\n#fields-safety_rating\n\tdisplay none\n\n.place-form label[for=place-feel_safe],\n  .place-form [name=feel_safe]\n\tdisplay none\n\n.place-form.safe label[for=place-feel_safe],\n  .place-form.safe [name=feel_safe]\n\tdisplay block\n\n.place-form label[for=place-feel_unsafe],\n  .place-form [name=feel_unsafe]\n\tdisplay none\n\n.place-form.unsafe label[for=place-feel_unsafe],\n  .place-form.unsafe [name=feel_unsafe]\n\tdisplay block\n\n.place-form label[for=place-private-submitter_email],\n  .place-form [name=private-submitter_email]\n\tdisplay none\n\n.place-form.location_updates-yesplease label[for=place-private-submitter_email],\n  .place-form.location_updates-yesplease [name=private-submitter_email]\n\tdisplay block\n\nlabel\n\tsmall\n\t\ttext-transform none\n\t\tdisplay none\n\n#map\n\t&.leaflet-container\n\t\tfont 14px/1.5 \"Proxima Nova\", Arial, Helvetica, sans-serif\n\n@media only screen and (max-width: 960px)\n\t#site-header\n\t\tbackground-image linear-gradient(90deg, #FFFFFF 60%, #2AAF32 70%, #D9C51A 80%, #DB32B0 90%, #FFFFFF 100%)\n\n@media only screen and (min-width: 320px) and (max-width: 1024px)\n\t.access\n\t\tli\n\t\t\t&:last-child\n\t\t\t\tdisplay none\n\n.goog-te-gadget\n\t&:last-child\n\t\tdisplay none\n\t.goog-te-combo\n\t\t&:last-child\n\t\t\tdisplay none\n\n","body,\nselect,\ninput,\ntextarea {\n  color: #555;\n  font-family: \"Proxima Nova\", Arial, Helvetica, serif;\n}\n.btn,\n.btn:visited,\n.btn:link {\n  font-weight: 600;\n  border: 0;\n}\n.btn-primary,\n.btn-primary:visited,\n.btn-primary:link {\n  background-color: #f0f;\n  box-shadow: 2px 2px 10px rgba(0,0,0,0.5);\n  color: #fff;\n  transition: all 0.5s ease;\n}\n.btn-primary:hover {\n  box-shadow: 0px 0px 1px rgba(0,0,0,0.2);\n  background-color: #fc13ff;\n}\n.btn-secondary,\n.btn-secondary:visited,\n.btn-secondary:link {\n  background-color: #ff0062;\n  color: #fff;\n}\na,\na:active,\na:visited {\n  color: #0092d7;\n}\n.recent-points a {\n  color: #585a59;\n  text-decoration: none;\n  float: left;\n  border-top: 1px solid #888;\n  border-bottom: 1px solid #666;\n  padding: 0.5em 0.5em 0.5em 0.75em;\n  width: 100%;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n#site-header {\n  border-top: #f0f 3px solid;\n  background-color: #fff;\n  background-image: linear-gradient(90deg, #fff 20%, #2aaf32 30%, #d9c51a 40%, #db32b0 50%, #fff 71%);\n  box-shadow: 0 5px 10px rgba(85,85,85,0.5), inset 0 -3px 0;\n}\n.access li:hover > ul,\n.access li:hover > form > ul {\n  display: block;\n  background: #ccc;\n  box-shadow: none;\n  border: 0px solid rgba(0,0,0,0.05);\n  border-radius: 0;\n  margin: -3px -60px 0 0;\n  padding: 3px 0 0 0;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 2;\n  overflow: hidden;\n}\n#site-title {\n  background: url(\"images/finnspotlogo.svg\") no-repeat center;\n  background-size: contain;\n  width: 440px;\n  text-indent: -133337px;\n}\n.site-name {\n  font-size: 0.45em;\n  float: left;\n  line-height: 1.1;\n  background-color: #26a0da;\n  position: relative;\n  top: -0.6em;\n}\n.has-pages #site-title {\n  margin-left: -0.75em;\n}\n.access {\n  font-size: 1.1em;\n}\n#pages-nav-container,\n#language-picker {\n  height: 100%;\n  float: left;\n  margin-right: -163px;\n  margin-left: 35px;\n}\n#nav-btn {\n  background: #6f6f6f;\n  color: #bbb;\n  font-size: 2em;\n  line-height: 0.7;\n  text-decoration: none;\n  text-align: center;\n  text-shadow: -1px 1px 1px rgba(0,0,0,0.25);\n  float: left;\n  width: 0.8em;\n  padding: 0.125em 0;\n  position: absolute;\n  border-radius: 2.5px;\n  left: 0.25em;\n  top: 0.25em;\n}\n#colophon {\n  box-shadow: inset 0 5px 10px rgba(85,85,85,0.25);\n}\n#ticker {\n  background: #fff;\n  box-shadow: -5px 0 10px rgba(85,85,85,0.5);\n}\n#content {\n  background: #fff;\n}\n@media only screen and (min-width: 600px) {\n  #content {\n    background: #ffc0cb;\n  }\n}\na.close-btn {\n  background: #fff;\n}\n@media only screen and (min-width: 600px) {\n  a.close-btn {\n    background: #ffc0cb;\n  }\n}\na.leaflet-control-layers-toggle {\n  background: none;\n  background-size: inherit;\n  width: 118px;\n  height: 28px;\n}\n#list-container {\n  background: #eee;\n}\n.list-toggle-btn,\n.list-toggle-btn:visited,\n.list-toggle-btn:link {\n  background-color: #f0f;\n}\n.list-toggle-btn:hover {\n  background-color: #575958;\n  color: #fff;\n}\n.drag-marker-instructions,\n.drag-marker-warning {\n  background-color: #e600c0;\n  color: #fff;\n  text-shadow: none;\n}\n.drag-marker-instructions img:before {\n  content: \"Hi\";\n}\n.drag-marker-warning {\n  background-color: #fc00f0;\n  color: #fff;\n  text-shadow: none;\n}\n#centerpoint.newpin .marker {\n  display: block;\n  width: 27px;\n  height: 41px;\n  background: transparent url(\"images/newspot.svg\") 0 0 no-repeat scroll;\n  position: relative;\n  top: 3px;\n  transition: top 0.4s ease;\n}\n#centerpoint.newpin .x {\n  background: transparent url(\"images/x.svg\") 0 0 no-repeat scroll;\n  width: 20px;\n  height: 15px;\n}\n#centerpoint.newpin .shadow {\n  background: transparent url(\"images/master-pin-shadow.svg\") -29px 2px no-repeat scroll;\n  width: 100px;\n}\n#centerpoint.newpin.dragging .shadow {\n  background: transparent url(\"images/master-pin-shadow.svg\") -20px -2px no-repeat scroll;\n}\n.spot-type-title {\n  text-align: center;\n  padding: 1em;\n  color: #000;\n  background-color: #dbdbdb;\n  border-bottom: 2px solid #8c8c8c;\n  margin-bottom: 1em;\n}\n.legend {\n  border-top: 0;\n  padding-bottom: 1em;\n}\n.legend li {\n  line-height: 26px;\n}\n.legend img {\n  max-height: 33px;\n  vertical-align: middle;\n}\n.place-value-age {\n  display: none;\n}\n.place-value-gender {\n  display: none;\n}\n.place-value-location_updates {\n  display: none;\n}\n.place-value-safety_rating:before {\n  content: \"Safety rating: \";\n  font-weight: bold;\n}\n.place-value-description:before {\n  content: \"Description: \";\n  font-weight: bold;\n}\n.place-value-rider_type:before {\n  content: \"Rider type: \";\n  font-weight: bold;\n}\n#place-safety_rating {\n  display: none;\n}\n#fields-safety_rating {\n  display: none;\n}\n.place-form label[for=place-feel_safe],\n.place-form [name=feel_safe] {\n  display: none;\n}\n.place-form.safe label[for=place-feel_safe],\n.place-form.safe [name=feel_safe] {\n  display: block;\n}\n.place-form label[for=place-feel_unsafe],\n.place-form [name=feel_unsafe] {\n  display: none;\n}\n.place-form.unsafe label[for=place-feel_unsafe],\n.place-form.unsafe [name=feel_unsafe] {\n  display: block;\n}\n.place-form label[for=place-private-submitter_email],\n.place-form [name=private-submitter_email] {\n  display: none;\n}\n.place-form.location_updates-yesplease label[for=place-private-submitter_email],\n.place-form.location_updates-yesplease [name=private-submitter_email] {\n  display: block;\n}\nlabel small {\n  text-transform: none;\n  display: none;\n}\n#map.leaflet-container {\n  font: 14px/1.5 \"Proxima Nova\", Arial, Helvetica, sans-serif;\n}\n@media only screen and (max-width: 960px) {\n  #site-header {\n    background-image: linear-gradient(90deg, #fff 60%, #2aaf32 70%, #d9c51a 80%, #db32b0 90%, #fff 100%);\n  }\n}\n@media only screen and (min-width: 320px) and (max-width: 1024px) {\n  .access li:last-child {\n    display: none;\n  }\n}\n.goog-te-gadget:last-child {\n  display: none;\n}\n.goog-te-gadget .goog-te-combo:last-child {\n  display: none;\n}\n","/*\n * border: <color>\n * border: ...\n */\n\nborder(color, args...)\n  if color is a 'color'\n    border: 1px solid color args\n  else\n    border: arguments\n","// ---------\n// Utilities\n// ---------\n\n// Alias: No Select\n// You can't highlight this.\n\nno-select()\n  -webkit-touch-callout: none\n  user-select: none\n\n// Alias: B\n// Border, but quicker and with an intelligent default.\n\nb()\n  arguments = unquote('1px solid') unless arguments\n  border: arguments\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  transition: arguments\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alias: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopen-type-ligatures()\n  font-feature-settings: \"liga\", \"dlig\"\n\n// Mixin: Rounded\n//\n// Unless you are working with a ridiculously large element, this will round the\n// corners as much as css will allow. Even in IE.\n//\n// ex. rounded()\n\nrounded()\n  border-radius: 999px\n\n// Mixin: Triangle\n//\n// One of my favorites. Makes a little css triangle for you. Pass it a direction\n// (up, down, left, right), size (in pixels), and a color.\n//\n// ex. triangle()\n// ex. triangle: 'down' 15px blue\n\ntriangle($direction = 'up', $size = 10px, $color = #000)\n  width: 0\n  height: 0\n  if $direction == 'up'\n    border-left: $size solid transparent\n    border-right: $size solid transparent\n    border-bottom: $size solid $color\n  else if $direction == 'down'\n    border-left: $size solid transparent\n    border-right: $size solid transparent\n    border-top: $size solid $color\n  else if $direction == 'left'\n    border-top: $size solid transparent\n    border-bottom: $size solid transparent\n    border-right: $size solid $color\n  else if $direction == 'right'\n    border-top: $size solid transparent\n    border-bottom: $size solid transparent\n    border-left: $size solid $color\n\n// Mixin: Debug\n//\n// Debugging tool - adds a border to the current element, its children,\n// grandchildren, etc so you can see what's up – great for precise layout\n// tweaks.  It will also add flags if you made mistakes like put in inline\n// styles, forgot an alt on an image, left the alt blank, etc. Not to be used\n// in production, obviously.\n//\n// via dbox: http://codepen.io/dbox/pen/GJZzYo?editors=110\n\ndebug()\n  border 1px solid MediumPurple\n  > *\n    border 1px solid DarkKhaki\n  > * > *\n    border 1px solid MediumTurquoise\n  > * > * > *\n    border 1px solid LightSlateGray\n  > * > * > * > *\n    border 1px solid LightBlue\n  > * > * > * > * > *\n    border 1px solid MediumSlateBlue\n  > * > * > * > * > * > *\n    border 1px solid DeepSkyBlue\n  > * > * > * > * > * > * > *\n    border 1px solid DarkSeaGreen\n\n  img\n    border: 1px solid #f00\n    -webkit-filter: hue-rotate(330deg) contrast(.75) saturate(6)\n    filter: hue-rotate(330deg) contrast(.75) saturate(6)\n\n  img[alt]\n    border: 1px solid LimeGreen\n    -webkit-filter: none\n    filter: none\n\n  img[alt=\"\"]\n    border: 1px solid gold\n    -webkit-filter: contrast(1) saturate(2)\n    filter: contrast(1) saturate(2)\n\n  a\n    background: rgba(#f00, .1)\n    border: 1px solid #f00\n\n  a[title]\n    background: none\n    border-color: LimeGreen\n\n  style\n    border: block\n\n  [style], style, [class=\"\"], [id=\"\"], a[href=\"#\"]\n    background: rgba(yellow, .2)\n    border: 1px solid gold\n\n// Block Mixin: Quantity Queries\n//\n// Set rules for a selector based on a specific sibling count.\n// via: https://github.com/pascalduez/postcss-quantity-queries\n//\n// ex. +quantity-at-least(6)\n// ex. +quantity-at-most(12, div)\n// ex. +quantity-between(0, 8, span)\n// ex. +quantity-exactly(5)\n\nquantity-at-least($count = 4, $selector = li)\n  & > {$selector}:nth-last-child(n+{$count})\n  & > {$selector}:nth-last-child(n+{$count}) ~ {$selector}\n    {block}\n\nquantity-at-most($count = 4, $selector = li)\n  & > {$selector}:nth-last-child(-n+{$count}):first-child\n  & > {$selector}:nth-last-child(-n+{$count}):first-child ~ {$selector}\n    {block}\n\nquantity-between($start = 0, $end = 10, $selector = li)\n  & > {$selector}:nth-last-child(n+{$start}):nth-last-child(-n+{$end}):first-child\n  & > {$selector}:nth-last-child(n+{$start}):nth-last-child(-n+{$end}):first-child ~ {$selector}\n    {block}\n\nquantity-exactly($count = 4, $selector = li)\n  & > {$selector}:nth-last-child({$count}):first-child\n  & > {$selector}:nth-last-child({$count}):first-child ~ {$selector}\n    {block}\n\n// Function: Rem Calculator\n//\n// Calculates and returns the rem value based on px input. Default base font\n// size is 16px, but can be changed with base-font-size.\n//\n// ex       : rem(30px) or rem(30)\n// returns  : 1.875rem\n\nrem($value)\n  $base-font-size ?= 16px\n  $type = unit($value)\n  if $type == px\n    return unit($value / $base-font-size, 'rem')\n  else\n    return unit($value, $type)\n\n// Custom animation timing functions, ported from bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_timing-functions.scss\n\n// ease-in\n$ease-in-quad =      cubic-bezier(0.550,  0.085, 0.680, 0.530)\n$ease-in-cubic =     cubic-bezier(0.550,  0.055, 0.675, 0.190)\n$ease-in-quart =     cubic-bezier(0.895,  0.030, 0.685, 0.220)\n$ease-in-quint =     cubic-bezier(0.755,  0.050, 0.855, 0.060)\n$ease-in-sine =      cubic-bezier(0.470,  0.000, 0.745, 0.715)\n$ease-in-expo =      cubic-bezier(0.950,  0.050, 0.795, 0.035)\n$ease-in-circ =      cubic-bezier(0.600,  0.040, 0.980, 0.335)\n$ease-in-back =      cubic-bezier(0.600, -0.280, 0.735, 0.045)\n$ease-in-swift =     cubic-bezier(0.900,  0.000, 0.450, 1.000)\n\n// ease-out\n$ease-out-quad =     cubic-bezier(0.250,  0.460, 0.450, 0.940)\n$ease-out-cubic =    cubic-bezier(0.215,  0.610, 0.355, 1.000)\n$ease-out-quart =    cubic-bezier(0.165,  0.840, 0.440, 1.000)\n$ease-out-quint =    cubic-bezier(0.230,  1.000, 0.320, 1.000)\n$ease-out-sine =     cubic-bezier(0.390,  0.575, 0.565, 1.000)\n$ease-out-expo =     cubic-bezier(0.190,  1.000, 0.220, 1.000)\n$ease-out-circ =     cubic-bezier(0.075,  0.820, 0.165, 1.000)\n$ease-out-back =     cubic-bezier(0.175,  0.885, 0.320, 1.275)\n$ease-out-swift =    cubic-bezier(0.550,  0.000, 0.100, 1.000)\n\n// ease-in-out\n$ease-in-out-quad =  cubic-bezier(0.455,  0.030, 0.515, 0.955)\n$ease-in-out-cubic = cubic-bezier(0.645,  0.045, 0.355, 1.000)\n$ease-in-out-quart = cubic-bezier(0.770,  0.000, 0.175, 1.000)\n$ease-in-out-quint = cubic-bezier(0.860,  0.000, 0.070, 1.000)\n$ease-in-out-sine =  cubic-bezier(0.445,  0.050, 0.550, 0.950)\n$ease-in-out-expo =  cubic-bezier(1.000,  0.000, 0.000, 1.000)\n$ease-in-out-circ =  cubic-bezier(0.785,  0.135, 0.150, 0.860)\n$ease-in-out-back =  cubic-bezier(0.680, -0.550, 0.265, 1.550)\n$ease-in-out-swift = cubic-bezier(0.900,  0.000, 0.100, 1.000)\n","/*\n * Overflow utility. Maps to regular overflow, and adds an ellipsis value.\n *\n * Synopsis:\n *\n *   overflow: <type>\n *\n * Examples:\n *\n *     overflow: auto\n *     overflow: hidden\n *     overflow: ellipsis\n *\n */\n\noverflow()\n  if arguments[0] == ellipsis\n    ellipsis()\n  else\n    overflow: arguments\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n"],"sourceRoot":"/source/"}